@model IEnumerable<KavisWeb.Entities.DbModels.Kurum>

@{
    ViewBag.Title = "Index";

    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Kurum Bilgileri</h2>

@*<p>
    <a href="#" class="btn btn-success btn-sm btn-kurumEkle">Yeni Kurum</a>
</p>*@
<table class="table table table-striped table-bordered" id="tableKurumlar">
    <thead>
        <tr>
            <th>
                Kurum Kodu
            </th>
            <th>
                Kurum Adı
            </th>
            <th>
                Kurum Türü
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.KurumKodu</td>
                <td>@item.Adi</td>
                <td>@item.Turu  </td>
                <td>
                    <button class="btn btn-sm btn-success btn-kurumDuzenle" data-id="@item.Id">Düzenle</button> |
                    @*<button class="btn btn-sm btn-success btn-kurumSil" data-id="@item.Id">Sil</button> |*@

                    <button class="btn btn-sm btn-success btn-birimler" data-id="@item.Id">Birimler</button>
                </td>
            </tr>
        }
    </tbody>

</table>


<div class="modal" id="KurumEdit">
    <div class="modal-dialog modal-lg" style="min-width:900px">
        <div class="modal-content">
            <form action="" method="post">
                <div class="modal-header">
                    Kurum
                </div>
                <div class="modal-body">
                    <input type="hidden" id="KurumId" name="Id" />
                    <div class="form-group">
                        <label>Adı:</label>
                        <input type="text" name="Adi" id="KurumAdi" class="form-control" />
                    </div>
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <label>Kodu:</label>
                                <input type="text" name="KurumKodu" id="KurumKodu" class="form-control" />
                            </div>
                            <div class="form-group">
                                <label>Türü:</label>
                                <select class="form-control" name="Turu" id="KurumTuru">
                                    <option value="">SEÇİNİZ</option>
                                    <option value="0">İL</option>
                                    <option value="1">İLÇE</option>
                                    <option value="2">OKUL</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label>Aktif Stratejik Plan:</label>
                                <select class="form-control" name="AktifPlanId" id="AktifPlanId">
                                    <option value="">SEÇİNİZ</option>
                                </select>
                            </div>

                        </div>
                        <div class="col">                           
                            <div class="form-group">
                                <label>Aktif Stratejik Plan Yılı:</label>
                                <select class="form-control" name="AktifYil" id="AktifYil">
                                    <option value="">SEÇİNİZ</option>
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                </select>
                            </div>
                            <div class="custom-checkbox">
                                <input type="checkbox" name="FaaliyetGirisAcik" id="FaaliyetGirisAcik" />
                                <label for="FaaliyetGirisAcik">Birimler faaliyet girişi ve düzenlemesi yapabilir.</label>
                            </div>
                            <div class="custom-checkbox">
                                <input type="checkbox" name="FaaliyetDurumGirisAcik" id="FaaliyetDurumGirisAcik" /> <label for="FaaliyetDurumGirisAcik">Birimler faaliyet çıktısı ve durumu ekleyebilir.</label>
                            </div>
                            <div class="custom-checkbox">
                                <input type="checkbox" name="GostergeGirisAcik" id="GostergeGirisAcik" /> <label for="GostergeGirisAcik">Birimler gösterge gerçekleşme değerlerini girebilir.</label>
                            </div>


                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col">

                            <div class="form-group">
                                <label>Uyarılar</label>
                                <textarea class="form-control" id="uyarilarTextArea" name="Mesaj"></textarea>
                                <span class="small">Giriş ekranında gözükecek uyarı bilgileri burada girilir.</span>
                            </div>
                        </div>
                    </div>


                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" type="submit">Kaydet</button>
                    <button class="btn btn-secondary" data-dismiss="modal">İptal</button>
                </div>
            </form>
        </div>
    </div>
</div>



@section scripts {

    <script type="text/javascript">

        class Kurumlar {

            ekle(kurum) {
                let dugmelerHtml = this.tabloSatirDugmeSablon(kurum.Id, true, true);
                let st = $(this.tabloSatirSablon(kurum, dugmelerHtml)).hide();
                $('#tableKurumlar tbody').append(st);
                st.show();
            }

            guncelle(row, faaliyet) {
                let satir = $('#faaliyetEkle')[0].row;
                $($(row).children()[1]).text(faaliyet);
                console.log(faaliyet);
                this.SaveFaaliyet(faaliyet);
            }

            sil(button) {
                let satir = $(button).parents("tr");
                console.log(satir);
                satir.hide();
            }

            columnTur(value) {
                switch (value) {
                    case 0: return "İl";
                    case 1: return "İlçe";
                    case 2: return "Okul";
                }

                return "";
            }

            tabloSatirSablon(d, dugmelerHtml = "") {
                return `<tr><td>${d.KurumKodu}</td><td>${d.Adi}</td><td>${this.columnTur(d.Turu)}</td><td>${dugmelerHtml}</td></tr>`;
            }

            tabloSatirDugmeSablon(id, duzenle, sil) {
                let a = "";
                a += duzenle == true ? `<button class="btn btn-sm btn-success btn-kurumDuzenle" data-id="${id}">Düzenle</button> | ` : '';
                a += sil == true ? `<button class="btn btn-sm btn-success btn-kurumSil"  data-id="${id}">Sil</button> | ` : '';
                a += `<button class="btn btn-sm btn-success btn-birimler" data-id="${id}">Birimler</button>`;
                return a;
            }

            LoadList() {
                let THIS = this;
                api_get("/api/Kurum", function (d) {
                    THIS.LoadTable(d);
                });
            }

            SaveKurum(d) {
                api_post("/api/Kurum", d).done(function () {
                });
            }

            DeleteKurum(id) {
                let THIS = this;
                return api_delete("/api/Kurum/" + id, function (d) {
                    THIS.LoadList();
                });
            }

            LoadTable(d) {
                $('#tableKurumlar tbody').empty();
                for (var i = 0; i < d.length; i++) {
                    const satir = d[i];
                    this.ekle(satir);
                }
            }

        }


        var kurumlar = new Kurumlar();

        class KurumForm extends Form {

            Clear() {
                super.Clear();
            }

            New() {
                this.Clear();
                this.LoadSPList(0);
                this.Show();
            }

            Edit(kurum) {
                //$(this.modalId + " #Id").val(kurum.Id);
                //$(this.modalId + " #KurumAdi").text(kurum.Adi);
                //$(this.modalId + " #KurumKodu").val(kurum.Kodu);
                //$(this.modalId + " #KurumTuru").val(kurum.Turu);
                this.Load(kurum);
                this.LoadSPList(kurum);
                this.Show();
            }

            Load(id) {
                let THIS = this;
                api_get("/api/Kurum/" + id, function (d) {
                    console.log(d);
                    THIS.PutValues(d);
                    $('#uyarilarTextArea').summernote("code",d.Mesaj);                                        
                });
            }

            Save() {
                let data = this.GetValues();

                api_post("/api/Kurum/", data).done(function () {
                    kurumlar.LoadList();
                });

                return true;
            }

            LoadSPList(id) {
                let THIS = this;
                api_get("/Kurumlar/StratejikPlanlar/" + id, function (d) {
                    
                    loadSelectList("#AktifPlanId", d, null, true, "Id", "Adi");
                });

            }


        }



        var kurumForm = new KurumForm("#KurumEdit");


        function onKurumEkleClickEvent() {
            kurumForm.New();
        }

        function onKurumDuzenleClickEvent() {
            let id = $(this).data("id");
            kurumForm.Edit(id);
        }

        function onKurumSilClickEvent() {

            let id = $(this).data("id");

            silmeMesaji("Bu Kurumu silerseniz bu kuruma bağlı tüm birim, stratejik plan kayıtları ve girdileri tamamen silinecektir. \n\r\n\r Silmek istediğinize emin misiniz?", "Dikkat! Silme Onayı").then(function (d) {

                if (d) {

                    kurumlar.DeleteKurum(id);

                }

            });

        }

        function onBirimlerClickEvent() {
            let id = $(this).data("id");
            location =  base_url("KavisModul02/Birimler");
        }

        $(document).ready(function () {

            $('.btn-kurumEkle').on("click", onKurumEkleClickEvent);
            $(document).on("click", '.btn-kurumDuzenle', onKurumDuzenleClickEvent);
            $(document).on("click", '.btn-kurumSil', onKurumSilClickEvent);
            $(document).on("click", '.btn-birimler', onBirimlerClickEvent);



        });


    </script>

}
